diff --git a/subprojects/gst-devtools/meson.build b/subprojects/gst-devtools/meson.build
index 54a92b551a..d7752da59c 100644
--- a/subprojects/gst-devtools/meson.build
+++ b/subprojects/gst-devtools/meson.build
@@ -1,5 +1,5 @@
 project('gst-devtools', 'c',
-  version : '1.21.2',
+  version : '1.21.2.1',
   meson_version : '>= 0.62',
   default_options : [ 'warning_level=1',
                       'c_std=gnu99',
diff --git a/subprojects/gst-devtools/validate/gst/validate/gst-validate-enum-types.c.template b/subprojects/gst-devtools/validate/gst/validate/gst-validate-enum-types.c.template
index ee4787b09b..e0a8625a39 100644
--- a/subprojects/gst-devtools/validate/gst/validate/gst-validate-enum-types.c.template
+++ b/subprojects/gst-devtools/validate/gst/validate/gst-validate-enum-types.c.template
@@ -1,4 +1,9 @@
 /*** BEGIN file-header ***/
+
+#ifdef HAVE_CONFIG_H
+#  include "config.h"
+#endif
+
 #include "gst-validate-enum-types.h"
 #include <gst/validate/validate.h>
 #define C_ENUM(v) ((gint) v)
diff --git a/subprojects/gst-devtools/validate/gst/validate/gst-validate-extra-checks.c b/subprojects/gst-devtools/validate/gst/validate/gst-validate-extra-checks.c
index 01b82fe093..270580bf7e 100644
--- a/subprojects/gst-devtools/validate/gst/validate/gst-validate-extra-checks.c
+++ b/subprojects/gst-devtools/validate/gst/validate/gst-validate-extra-checks.c
@@ -1,11 +1,13 @@
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
 #include <gst/gst.h>
 #include "validate.h"
 #include "gst-validate-utils.h"
 #include "gst-validate-internal.h"
 
-#ifdef HAVE_CONFIG_H
-#include "config.h"
-#endif
+
 
 #define EXTRA_CHECKS_WRONG_NUMBER_OF_INSTANCES g_quark_from_static_string ("extrachecks::wrong-number-of-instances")
 
diff --git a/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.c b/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.c
index 1d7a250dc9..0ab9e25257 100644
--- a/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.c
+++ b/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.c
@@ -534,6 +534,8 @@ gst_validate_report_load_issues (void)
       GST_VALIDATE_ISSUE_FLAGS_FULL_DETAILS);
   REGISTER_VALIDATE_ISSUE (ISSUE, SCENARIO_ACTION_EXECUTION_ISSUE,
       "An issue happened during the execution of a scenario", NULL);
+  REGISTER_VALIDATE_ISSUE (WARNING, SCENARIO_ACTION_ENDED_EARLY,
+      "Got EOS before an action playback time", NULL);
   REGISTER_VALIDATE_ISSUE (CRITICAL, CONFIG_LATENCY_TOO_HIGH,
       "The pipeline latency is higher than the maximum allowed by the scenario",
       NULL);
diff --git a/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.h b/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.h
index 8a24a877c1..1f8acd24e0 100644
--- a/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.h
+++ b/subprojects/gst-devtools/validate/gst/validate/gst-validate-report.h
@@ -138,6 +138,12 @@ typedef enum {
 #define SCENARIO_ACTION_CHECK_ERROR              _QUARK("scenario::check-error")
 #define SCENARIO_ACTION_TIMEOUT                  _QUARK("scenario::action-timeout")
 #define SCENARIO_ACTION_EXECUTION_ISSUE          _QUARK("scenario::execution-issue")
+/**
+ * SCENARIO_ACTION_ENDED_EARLY:
+ *
+ * Since: 1.22
+ */
+#define SCENARIO_ACTION_ENDED_EARLY              _QUARK("scenario::action-ended-early")
 
 #define CONFIG_LATENCY_TOO_HIGH                  _QUARK("config::latency-too-high")
 #define CONFIG_TOO_MANY_BUFFERS_DROPPED          _QUARK("config::too-many-buffers-dropped")
diff --git a/subprojects/gst-devtools/validate/gst/validate/gst-validate-runner.c b/subprojects/gst-devtools/validate/gst/validate/gst-validate-runner.c
index 8cf64f2ccb..bf19cbf7df 100644
--- a/subprojects/gst-devtools/validate/gst/validate/gst-validate-runner.c
+++ b/subprojects/gst-devtools/validate/gst/validate/gst-validate-runner.c
@@ -22,13 +22,14 @@
  * Boston, MA 02111-1307, USA.
  */
 
-#include <string.h>
-#include <stdlib.h>
 
 #ifdef HAVE_CONFIG_H
 #  include "config.h"
 #endif
 
+#include <string.h>
+#include <stdlib.h>
+
 #include "validate.h"
 #include "gst-validate-internal.h"
 #include "gst-validate-report.h"
diff --git a/subprojects/gst-devtools/validate/gst/validate/gst-validate-scenario.c b/subprojects/gst-devtools/validate/gst/validate/gst-validate-scenario.c
index 5965c58204..47fec1ee80 100644
--- a/subprojects/gst-devtools/validate/gst/validate/gst-validate-scenario.c
+++ b/subprojects/gst-devtools/validate/gst/validate/gst-validate-scenario.c
@@ -2688,6 +2688,15 @@ execute_next_action_full (GstValidateScenario * scenario, GstMessage * message)
     return G_SOURCE_CONTINUE;
   }
 
+  if (message && GST_MESSAGE_TYPE (message) == GST_MESSAGE_EOS
+      && act->playback_time != GST_CLOCK_TIME_NONE) {
+    GST_VALIDATE_REPORT_ACTION (scenario, act,
+        SCENARIO_ACTION_ENDED_EARLY,
+        "Got EOS before action playback time %" GST_TIME_FORMAT,
+        GST_TIME_ARGS (act->playback_time));
+    goto execute_action;
+  }
+
   switch (act->priv->state) {
     case GST_VALIDATE_EXECUTE_ACTION_NONE:
     case GST_VALIDATE_EXECUTE_ACTION_NON_BLOCKING:
@@ -2734,6 +2743,7 @@ execute_next_action_full (GstValidateScenario * scenario, GstMessage * message)
     return G_SOURCE_CONTINUE;
   }
 
+execute_action:
   type = _find_action_type (act->type);
 
   GST_DEBUG_OBJECT (scenario, "Executing %" GST_PTR_FORMAT
@@ -5534,9 +5544,9 @@ gst_validate_list_scenarios (gchar ** scenarios, gint num_scenarios,
       if (!_parse_scenario (file, kf)) {
         GST_ERROR ("Could not parse scenario: %s", scenarios[i]);
 
-        gst_object_unref (file);
         res = 1;
       }
+      g_clear_object (&file);
     }
 
     goto done;
@@ -5547,29 +5557,30 @@ gst_validate_list_scenarios (gchar ** scenarios, gint num_scenarios,
     env_scenariodir = g_strsplit (envvar, ":", 0);
 
   _list_scenarios_in_dir (dir, kf);
-  g_object_unref (dir);
+  g_clear_object (&dir);
 
   tldir = g_build_filename (GST_DATADIR, "gstreamer-" GST_API_VERSION,
       "validate", GST_VALIDATE_SCENARIO_DIRECTORY, NULL);
   dir = g_file_new_for_path (tldir);
   _list_scenarios_in_dir (dir, kf);
-  g_object_unref (dir);
+  g_clear_object (&dir);
   g_free (tldir);
 
   if (env_scenariodir) {
     guint i;
+    GFile *subfile;
 
     for (i = 0; env_scenariodir[i]; i++) {
-      dir = g_file_new_for_path (env_scenariodir[i]);
-      _list_scenarios_in_dir (dir, kf);
-      g_object_unref (dir);
+      subfile = g_file_new_for_path (env_scenariodir[i]);
+      _list_scenarios_in_dir (subfile, kf);
+      g_clear_object (&subfile);
     }
   }
 
   /* Hack to make it work within the development environment */
   dir = g_file_new_for_path ("data/scenarios");
   _list_scenarios_in_dir (dir, kf);
-  g_object_unref (dir);
+  g_clear_object (&dir);
 
 done:
   result = g_key_file_to_data (kf, &datalength, &err);
@@ -5592,6 +5603,7 @@ done:
 
     res = FALSE;
   }
+  g_clear_object (&dir);
 
   g_key_file_free (kf);
 
diff --git a/subprojects/gst-devtools/validate/gst/validate/media-descriptor-parser.c b/subprojects/gst-devtools/validate/gst/validate/media-descriptor-parser.c
index a71ca24a1f..daaeb8277c 100644
--- a/subprojects/gst-devtools/validate/gst/validate/media-descriptor-parser.c
+++ b/subprojects/gst-devtools/validate/gst/validate/media-descriptor-parser.c
@@ -18,6 +18,9 @@
  * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
  * Boston, MA 02110-1301, USA.
  */
+#ifdef HAVE_CONFIG_H
+#  include "config.h"
+#endif
 
 #include "media-descriptor-parser.h"
 #include <string.h>
diff --git a/subprojects/gst-devtools/validate/gst/validate/media-descriptor-writer.c b/subprojects/gst-devtools/validate/gst/validate/media-descriptor-writer.c
index 95b3512743..a96c3a0bee 100644
--- a/subprojects/gst-devtools/validate/gst/validate/media-descriptor-writer.c
+++ b/subprojects/gst-devtools/validate/gst/validate/media-descriptor-writer.c
@@ -18,6 +18,9 @@
  * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
  * Boston, MA 02110-1301, USA.
  */
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
 
 #include <gst/validate/validate.h>
 #include "media-descriptor-writer.h"
@@ -735,17 +738,25 @@ gst_validate_media_descriptor_writer_new_discover (GstValidateRunner * runner,
         gst_validate_media_descriptor_writer_add_stream (writer, streaminfo);
       }
     } else {
+      GstDiscovererStreamInfo *nextinfo;
       if (!GST_IS_DISCOVERER_AUDIO_INFO (info)
-          && !GST_IS_DISCOVERER_AUDIO_INFO (info)
-          && gst_discoverer_stream_info_get_next (streaminfo)) {
-        gst_validate_media_descriptor_get_file_node ((GstValidateMediaDescriptor
-                *) writer)->caps =
-            gst_discoverer_stream_info_get_caps (streaminfo);
-        streaminfo = gst_discoverer_stream_info_get_next (streaminfo);
+          && !GST_IS_DISCOVERER_VIDEO_INFO (info)) {
+        nextinfo = gst_discoverer_stream_info_get_next (streaminfo);
+        if (nextinfo) {
+          GstValidateMediaFileNode *fn =
+              gst_validate_media_descriptor_get_file_node (
+              (GstValidateMediaDescriptor *) writer);
+          fn->caps = gst_discoverer_stream_info_get_caps (streaminfo);
+          gst_discoverer_stream_info_unref (streaminfo);
+          streaminfo = nextinfo;
+        }
       }
       do {
         gst_validate_media_descriptor_writer_add_stream (writer, streaminfo);
-      } while ((streaminfo = gst_discoverer_stream_info_get_next (streaminfo)));
+        nextinfo = gst_discoverer_stream_info_get_next (streaminfo);
+        gst_discoverer_stream_info_unref (streaminfo);
+        streaminfo = nextinfo;
+      } while (streaminfo);
     }
   } else {
     GST_VALIDATE_REPORT (writer, FILE_NO_STREAM_INFO,
diff --git a/subprojects/gst-devtools/validate/gst/validate/media-descriptor.c b/subprojects/gst-devtools/validate/gst/validate/media-descriptor.c
index 962bb9a30f..d1231061dd 100644
--- a/subprojects/gst-devtools/validate/gst/validate/media-descriptor.c
+++ b/subprojects/gst-devtools/validate/gst/validate/media-descriptor.c
@@ -19,6 +19,9 @@
  * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
  * Boston, MA 02110-1301, USA.
  */
+#ifdef HAVE_CONFIG_H
+#  include "config.h"
+#endif
 
 #include <string.h>
 #include "media-descriptor.h"
diff --git a/subprojects/gst-devtools/validate/gst/validate/meson.build b/subprojects/gst-devtools/validate/gst/validate/meson.build
index ad3be46199..0a574dfa75 100644
--- a/subprojects/gst-devtools/validate/gst/validate/meson.build
+++ b/subprojects/gst-devtools/validate/gst/validate/meson.build
@@ -58,14 +58,14 @@ gst_validate_enums = gnome.mkenums('gstvalidateenumtypes',
 
 validate_deps = [gst_check_dep, gst_dep, gst_controller_dep, gstbase_dep,
                  gio_dep, gmodule_dep, gst_pbutils_dep, mathlib, json_dep]
-gstvalidate = library('gstvalidate-1.0',
+gstvalidate = library('gstvalidate-@0@'.format(apiversion),
     sources: gstvalidate_sources + gst_validate_enums + runner_file,
     version : libversion,
     soversion : soversion,
     darwin_versions : osxversion,
     include_directories : [inc_dirs],
     install: true,
-    c_args : [gst_c_args] + ['-D_GNU_SOURCE'],
+    c_args : [gst_c_args] + ['-D_GNU_SOURCE', '-DBUILDING_GST_VALIDATE'],
     dependencies : validate_deps)
 
 if not static_build
@@ -73,7 +73,7 @@ if not static_build
       sources: gst_validate_enums + runner_file,
       include_directories : [inc_dirs],
       install: true,
-      c_args : [gst_c_args] + ['-D__GST_VALIDATE_PLUGIN', '-D_GNU_SOURCE'],
+      c_args : [gst_c_args] + ['-D__GST_VALIDATE_PLUGIN', '-D_GNU_SOURCE', '-DBUILDING_GST_VALIDATE'],
       install_dir : plugins_install_dir,
       objects: gstvalidate.extract_objects(gstvalidate_sources),
       dependencies : validate_deps)
diff --git a/subprojects/gst-devtools/validate/gst/validate/validate-prelude.h b/subprojects/gst-devtools/validate/gst/validate/validate-prelude.h
index 5163463765..59a07549a6 100644
--- a/subprojects/gst-devtools/validate/gst/validate/validate-prelude.h
+++ b/subprojects/gst-devtools/validate/gst/validate/validate-prelude.h
@@ -25,7 +25,11 @@
 #include <gst/gst.h>
 
 #ifndef GST_VALIDATE_API
-#define GST_VALIDATE_API GST_EXPORT
+#ifdef BUILDING_GST_VALIDATE
+#define GST_VALIDATE_API GST_API_EXPORT        /* from config.h */
+#else
+#define GST_VALIDATE_API GST_API_IMPORT
+#endif
 #endif
 
 #endif /* __GST_VALIDATE_PRELUDE_H__ */
diff --git a/subprojects/gst-devtools/validate/meson.build b/subprojects/gst-devtools/validate/meson.build
index 84ad240436..17ca36a578 100644
--- a/subprojects/gst-devtools/validate/meson.build
+++ b/subprojects/gst-devtools/validate/meson.build
@@ -16,6 +16,19 @@ if cc.has_header('unistd.h')
   cdata.set('HAVE_UNISTD_H', 1)
 endif
 
+# Symbol visibility
+if cc.get_id() == 'msvc'
+  export_define = '__declspec(dllexport) extern'
+elif cc.has_argument('-fvisibility=hidden')
+  add_project_arguments('-fvisibility=hidden', language: 'c')
+  export_define = 'extern __attribute__ ((visibility ("default")))'
+else
+  export_define = 'extern'
+endif
+
+# Passing this through the command line would be too messy
+cdata.set('GST_API_EXPORT', export_define)
+
 configure_file(output : 'config.h', configuration : cdata)
 
 validate_plugins_install_dir = '@0@/gstreamer-1.0/validate'.format(get_option('libdir'))
diff --git a/subprojects/gst-devtools/validate/tools/gst-validate-media-check.c b/subprojects/gst-devtools/validate/tools/gst-validate-media-check.c
index f357ac4eb1..0a54e29265 100644
--- a/subprojects/gst-devtools/validate/tools/gst-validate-media-check.c
+++ b/subprojects/gst-devtools/validate/tools/gst-validate-media-check.c
@@ -177,11 +177,12 @@ out:
   }
   if (runner)
     gst_object_unref (runner);
-  gst_validate_deinit ();
-  gst_deinit ();
 
   gst_validate_printf (NULL, "\n=======> Test %s (Return value: %i)\n\n",
       ret == 0 ? "PASSED" : "FAILED", ret);
 
+  gst_validate_deinit ();
+  gst_deinit ();
+
   return ret;
 }
